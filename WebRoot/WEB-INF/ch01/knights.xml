<?xml version="1.0" encoding="UTF-8"?> <!-- xml版本及字符集 -->

<!-- Spring-beans声明 beans: xml文件的根节点 xmlns: 是XML NameSpace的缩写，因为XML文件的标签名称都是自定义的，自己写的和其他人定义的标签很有可能会重复命名，而功能却不一样，所以需要加上一个namespace来区分这个xml文件和其他的xml文件，类似于java中的package。 
	xmlns:xsi: 是指xml文件遵守xml规范，xsi全名：xml schema instance，是指具体用到的schema资源文件里定义的元素所准守的规范。即/spring-beans-2.0.xsd这个文件里定义的元素遵守什么标准。 
	xsi:schemaLocation: 是指，本文档里的xml元素所遵守的规范，schemaLocation 属性用来引用(schema)模式文档，解析器可以在需要的情况下使用这个文档对 
	XML 实例文档进行校验。它的值(URI)是成对出现的，第一个值表示命名空间，第二个值则表示描述该命名空间的模式文档的具体位置，两个值之间以空格分隔。 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLoaction="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 
		@program 查询清单1.6 - P32
		@description 使用 Spring-xml方式将 SlayDragonQuest 注入到 BraveKnight中
		@author YC.Yin 
		@date 2017-4-30
	-->
	<!-- Spiring-bean -->

	<!-- 
		在 Spring中声明 id=knight的 bean
	 	使用 constructor-arg - ref 引入 id=quest的 bean
	-->
	<bean id="knight" class="com.chap01.BraveKnight">
		<constructor-arg ref="quest" />
	</bean>

	<!-- 
		在 Spring中声明 id=knight的 quest (其实建议为 slayDragonQuest) 
		使用 constructor-arg - value 将 System.out 作为参数传递到构造器 SlayDragonQuest(PrintStream)中
	-->
	<bean id="quest" class="com.chap01.SlayDragonQuest">
		<constructor-arg value="#{T(System).out}"></constructor-arg>
	</bean>

</beans>