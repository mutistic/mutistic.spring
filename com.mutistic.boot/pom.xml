<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- 1、项目基本信息 -->
	<groupId>com.mutistic</groupId>
	<artifactId>com.mutistic.boot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>com.mutisitc.boot</name>
	<description>此项目基于Craig Walls的《Spring Boot实战》一书。使用的是Eclipse 集成的 STS插件自动创建的Spring Boot项目</description>

	<!-- 2、配置文件和构建等编码格式和JDK版本信息 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<!-- 3、配置spring boot 构建信息： maven 构建插件的主要功能是把项目打包成一个可执行的超级JAR（uber-JAR），包括把应用程序的所有依赖打入JAR文件内，并为JAR添加一个描述文件，其中的内容能让你用 
		java -jar 来运行应用程序 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<!-- 4、从 spring-boot-starter-parent 继承版本号： 将spring-boot-starter-parent作为上一级，这样一来就能利用Maven的依赖管理功能，继承很多常用库的依赖版本，在声明依赖时就不用再去指定版本号了 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.2.RELEASE</version>
		<relativePath />
	</parent>
	<!-- 4.1、可以通过导入 spring-boot-dependencies 替代 spring-boot-starter-parent -->
	<!-- <dependencyManagement> <dependencies> <dependency> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-dependencies</artifactId> <version>2.0.2.RELEASE</version> 
		<scope>import</scope> <type>pom</type> </dependency> </dependencies> </dependencyManagement> -->

	<!-- 5、起步依赖： 起步依赖本质上是一个Maven项目对象模型（Project Object Model，POM），定义了对其他库的传递依赖，这些东西加在一起即支持某项功能。很多起步依赖的命名都暗示了它们提供的某种或某类功能 
		org.springframework.boot > spring-boot-starter：spring boot java启动 org.springframework.boot 
		> spring-boot-starter-web：spring boot web启动 org.springframework.boot > spring-boot-starter-test 
		> test：spring boot test：Junit测试启动 org.springframework.boot > spring-boot-starter-data-jpa：JPA：在关系型数据库里持久化数据：application.propertions未配置DB和JPA信息的话，引入此包会报错 
		org.hibernate > hibernate-ehcache： org.hibernate > hibernate-entitymanager： 
		org.hibernate.validator > hibernate-validator： org.springframework.boot > 
		spring-boot-starter-thymeleaf：Web视图 com.h2database > h2：h2数据库 mysql > mysql-connector-java：Mysql：Mysql数据库 
		javax.inject > javax.inject > 1 ： -->
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.9.0</version>
		</dependency>
		<!-- shiro spring. -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>1.4.0</version>
		</dependency>
		<!-- shiro ehcache -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>1.4.0</version>
		</dependency>
	</dependencies>

	<!-- <dependencies> <dependency> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-starter-web</artifactId> </dependency> <dependency> 
		<groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> 
		<scope>test</scope> </dependency> <dependency> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-starter-data-jpa</artifactId> </dependency> <dependency> 
		<groupId>org.hibernate</groupId> <artifactId>hibernate-ehcache</artifactId> 
		</dependency> <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-entitymanager</artifactId> 
		</dependency> <dependency> <groupId>org.hibernate.validator</groupId> <artifactId>hibernate-validator</artifactId> 
		</dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-thymeleaf</artifactId> 
		</dependency> <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> 
		</dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> 
		</dependency> <dependency> <groupId>javax.inject</groupId> <artifactId>javax.inject</artifactId> 
		<version>1</version> </dependency> </dependencies> -->

</project>
